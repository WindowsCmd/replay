{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/PipButton/PipButton.js","webpack:///./src/replay/components/controls/PipButton/PipButton.mdx","webpack:///./src/replay/components/generic/ToggleButton/ToggleButton.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","names","sanitizedPrefix","classNameArray","i","length","push","join","isDefined","item","hydrateClassNames","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","getBoundingEventCoordinates","evt","element","domRect","currentTarget","getBoundingClientRect","extractedEvent","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","PipButton","React","value","this","props","setProperties","isPipActive","render","isPipAvailable","pipActiveContent","pipInactiveContent","label","isOn","className","onToggle","handleToggle","toggledOnContent","toggledOffContent","displayName","MDXContent","Component","super","layout","components","name","parentName","__codesandbox","__position","__code","__scope","ShowCase","SimpleTable","Square","Copy","Footnote","of","rows","selectOffClasses","toggleButtonOff","toggleButton","selectOnClasses","toggleButtonOn","ToggleButton","handleClick","onRef","toggleClassName","content","role","aria-pressed","title","onClick","onKeyUp","handleKeyUp","onKeyDown","handleKeyDown","ref","tabIndex","useDefaultClassNaming","setState","state","convertPropsToState","style","justifyContent","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","headers","header","j","formatContent"],"mappings":"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","file":"static/js/components-controls-pip-button-pip-button.26ac95d0.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport ToggleButton from '../../generic/ToggleButton/ToggleButton';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** If true, this button will be rendered. */\n  isPipAvailable?: boolean,\n  /** The current picture-in-picture state, as reported from a video streamer. */\n  isPipActive?: boolean,\n  /** Intended for the setProperties method passed from the player controller through connectControl(). When the button is clicked, this callback is invoked with an object having an isPipActive property with the opposite boolean value as the isPipActive prop. */\n  setProperties?: ({ isPipActive: boolean }) => void,\n  /** The button content to be displayed while isPipActive is true. */\n  pipActiveContent: React.Node,\n  /** The button content to be displayed while isPipActive is false. */\n  pipInactiveContent: React.Node\n};\n\nconst className = 'pip-button';\n\nclass PipButton extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['isPipAvailable', 'isPipActive'];\n\n  handleToggle = (value: boolean) => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ isPipActive: value });\n    }\n  };\n\n  render() {\n    if (this.props.isPipAvailable) {\n      const { isPipActive, pipActiveContent, pipInactiveContent, label, classNamePrefix } = this.props;\n      return (\n        <ToggleButton\n          classNamePrefix={classNamePrefix}\n          isOn={isPipActive}\n          className={className}\n          label={label}\n          onToggle={this.handleToggle}\n          toggledOnContent={pipActiveContent}\n          toggledOffContent={pipInactiveContent}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nPipButton.displayName = 'PipButton';\nexport default PipButton;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport PipButton from './PipButton';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport { Square, Copy } from 'react-feather';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"pipbutton\"}}>{`PipButton`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar button for toggling the browser's picture-in-picture mode for video playback.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In order for this button to render, the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isPipAvailable`}</MDXTag>{` must have the value `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{`. This property is reported from the video streamer based on browser feature detection.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isPipActive`}</MDXTag>{` indicates to the button if picture-in-picture playback is currently active(`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{`/`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`false`}</MDXTag>{`). Through the callback prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties`}</MDXTag>{` in invokes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ isPipActive: value })`}</MDXTag>{` on clicks, with the opposite value of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isPipActive`}</MDXTag>{` prop passed as value.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<ShowCase\\n  render={({ setProperties, isPipActive }) => (\\n    <PipButton\\n      isPipAvailable={true}\\n      pipActiveContent={<Square />}\\n      pipInactiveContent={<Copy />}\\n      isPipActive={isPipActive}\\n      setProperties={setProperties}\\n    />\\n  )}\\n/>'} __scope={{props: this ? this.props : props,PipButton,ShowCase,SimpleTable,Square,Copy,Footnote}}>\n  <ShowCase render={({ setProperties, isPipActive }) => (\n    <PipButton isPipAvailable={true} pipActiveContent={<Square/>} pipInactiveContent={<Copy/>} isPipActive={isPipActive} setProperties={setProperties} />\n  )}/>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={PipButton} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'pip-button',\n  'Generic class name': 'toggle-button',\n  'States': 'toggled-off, toggled-on',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.pip-button'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  /** Set to true if the button should be in the toggled on mode. */\n  isOn?: boolean,\n  /** The label will appear in the title attribute of the root DOM element of the toggle button. */\n  label?: string,\n  /** The button content to be displayed when the button is toggled off. */\n  toggledOffContent?: React.Node,\n  /** The button content to be displayed when the button is toggled on. */\n  toggledOnContent?: React.Node,\n  /** A callback method that will be invoked when the button is clicked and the value toggled. If the button has been toggled on, true is passed to the callback. */\n  onToggle?: boolean => void,\n  /** A callback method invoked with the rendered button element, for focus purposes. */\n  onRef?: (?HTMLElement) => void\n};\n\nconst baseClassName = 'toggle-button';\nconst offClassName = 'toggled-off';\nconst onClassName = 'toggled-on';\n\nconst selectOffClasses = classes => classes.toggleButtonOff || classes.toggleButton;\nconst selectOnClasses = classes => classes.toggleButtonOn || classes.toggleButton;\n\n/**\n * Renders a button with two states - toggled on and off. When clicked, it reports back the opposite state.\n */\nclass ToggleButton extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onToggle && this.props.onToggle(!this.props.isOn);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { isOn, label, className, classNamePrefix, toggledOnContent, toggledOffContent, onRef, classes } = this.props;\n    const toggleClassName = isOn ? onClassName : offClassName;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses: isOn ? selectOnClasses : selectOffClasses,\n      classNamePrefix,\n      classNames: [className, baseClassName, toggleClassName]\n    });\n    const content = isOn ? toggledOnContent : toggledOffContent;\n    return (\n      <div\n        role=\"button\"\n        aria-pressed={isOn}\n        title={label}\n        onClick={this.handleClick}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        ref={onRef}\n        className={classNames}\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleButton;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}