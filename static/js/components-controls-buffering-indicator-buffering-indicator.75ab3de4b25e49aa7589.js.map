{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/BufferingIndicator/BufferingIndicator.js","webpack:///./src/replay/components/controls/BufferingIndicator/BufferingIndicator.mdx","webpack:///./src/replay/default-player/default-skin/LoadingAnimation.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","names","sanitizedPrefix","classNameArray","i","length","push","join","isDefined","item","hydrateClassNames","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","getBoundingEventCoordinates","evt","element","domRect","currentTarget","getBoundingClientRect","extractedEvent","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","className","BufferingIndicator","children","content","isBuffering","isSeeking","playState","renderStrategy","label","isActive","title","streamStateKeysForObservation","displayName","MDXContent","React","Component","props","super","this","layout","render","components","name","parentName","__codesandbox","__position","__code","__scope","SimpleTable","LoadingAnimation","Footnote","style","backgroundColor","position","of","rows","viewBox","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","headers","header","value","j","formatContent"],"mappings":"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","file":"static/js/components-controls-buffering-indicator-buffering-indicator.27bbfeaa.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport { defaultClassNamePrefix, prefixClassNames } from '../../common';\nimport type { PlayState } from '../../player/VideoStreamer/types';\nimport type { CommonProps } from '../../common';\nimport type { ObservingControlStaticProps } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ If true, the buffering indicator is shown or the root element has a class name indicating buffering. */\n  isBuffering?: boolean,\n  /** ⇘︎ If true, the buffering indicator is shown or the root element has a class name indicating buffering. */\n  isSeeking?: boolean,\n  /** ⇘︎ If set to 'starting', 'buffering', or 'seeking', the buffering indicator is shown or the root element has a class name indicating buffering. */\n  playState?: PlayState,\n  /** The content to show if buffering, or always if renderingStrategy is 'always'. */\n  children?: React.Node,\n  /** Alternative to specifying children. Other Replay controls use content as the convention. */\n  content?: React.Node,\n  /** When set to 'always', the content is always rendered, but buffering is indicated through a class name on the component's root element. This option is used when controlling display through CSS. */\n  renderStrategy?: 'when-buffering' | 'always'\n};\n\nconst className = 'buffering-indicator';\nconst isActiveClassName = 'buffering';\n\ntype BufferingIndicatorType = React.StatelessFunctionalComponent<Props> & ObservingControlStaticProps;\n\nconst BufferingIndicator: BufferingIndicatorType = ({\n  children,\n  content,\n  isBuffering,\n  isSeeking,\n  playState,\n  renderStrategy = 'when-buffering',\n  label,\n  classNamePrefix = defaultClassNamePrefix\n}: Props) => {\n  const isActive =\n    isBuffering || isSeeking || playState === 'starting' || playState === 'buffering' || playState === 'seeking';\n  if (renderStrategy === 'always') {\n    if (isActive) {\n      return (\n        <div title={label} className={prefixClassNames(classNamePrefix, className, isActiveClassName)}>\n          {children || content}\n        </div>\n      );\n    } else {\n      return <div className={prefixClassNames(classNamePrefix, className)}>{children || content}</div>;\n    }\n  } else {\n    if (isActive) {\n      return (\n        <div title={label} className={prefixClassNames(classNamePrefix, className, isActiveClassName)}>\n          {children || content}\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n};\n\nBufferingIndicator.streamStateKeysForObservation = ['isBuffering', 'isSeeking', 'playState'];\nBufferingIndicator.displayName = 'BufferingIndicator';\n\nexport default BufferingIndicator;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import '../../../replay-default.css';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport { Playground, PropsTable } from 'docz';\nimport BufferingIndicator from './BufferingIndicator';\nimport LoadingAnimation from '../../../default-player/default-skin/LoadingAnimation';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"bufferingindicator-component\"}}>{`BufferingIndicator component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Displays any overlay (animation, graphics, etc.) when a buffering, starting, or seeking state is reported.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The main concept of this component is to display and animate an overlay when the user needs to wait for playback to start or resume (buffering).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The overlay is specified as the component's child, or in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`content`}</MDXTag>{` prop.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`renderStrategy`}</MDXTag>{` is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'always'`}</MDXTag>{`, the content will always be rendered. However, the class name \"buffering\" (with prefix) will be added to the compoent's root element when the state is buffering.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`renderStrategy`}</MDXTag>{` is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'when-buffering'`}</MDXTag>{`, no content will be rendered when not buffering. The drawback of this approach is that the indicator will stop displaying abruptly, and a smooth fade-out animation cannot be applied. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The state of buffering is set when one or both of the props `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isBuffering`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isSeeking`}</MDXTag>{` are set to true, or if the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`playState`}</MDXTag>{` prop is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'starting'`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'buffering'`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'seeking'`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<div\\n  style={{ backgroundColor: \\'gray\\', height: \\'100px\\', position: \\'relative\\' }}\\n>\\n  <BufferingIndicator\\n    renderStrategy=\\\"always\\\"\\n    isBuffering={false}\\n    isSeeking={false}\\n    playState=\\\"starting\\\"\\n  >\\n    <LoadingAnimation />\\n  </BufferingIndicator>\\n</div>'} __scope={{props: this ? this.props : props,SimpleTable,BufferingIndicator,LoadingAnimation,Footnote}}>\n  <div style={{ backgroundColor: 'gray', height: '100px', position: 'relative' }}>\n    <BufferingIndicator \n      renderStrategy=\"always\"\n      isBuffering={false}\n      isSeeking={false}\n      playState=\"starting\" >\n        <LoadingAnimation/>\n    </BufferingIndicator>\n  </div>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`In this example, the animation is showing because `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`playState=\"starting\"\"`}</MDXTag>{`. Try experimenting with other values for playState, and with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{` for isBuffering/isSeeking.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={BufferingIndicator} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'buffering-indicator',\n  'Generic class name': '',\n  'States': 'buffering',\n  'Parent': ''\n}]}/>\n<MDXTag name=\"p\" components={components}>{`Note that the state class name `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`buffering`}</MDXTag>{` is only present when buffering is reported, and the render strategy is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'always'`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\n\nconst LoadingAnimation = () => (\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 38\" stroke=\"currentColor\">\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n        <circle stroke=\"currentColor\" strokeOpacity=\"0.5\" cx=\"18\" cy=\"18\" r=\"18\" />\n        <path className=\"animated\" d=\"M36 18c0-9.94-8.06-18-18-18\" />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default LoadingAnimation;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}